plugins {
	//다른 plugin들을 살펴보며 적절한 행동을 취하는데,
	//java가 있을 경우 executable jar를 build하는 등 자동적으로 설정한다고 한다.
	id 'org.springframework.boot' version '2.6.7'
	//의존성 관리를 위한 플러그인. gradle's native bom support라는 다른 방법도 존재.
	//dependency의 버전 생략 가능한 이유.(spring-boot-dependencies bom에서 관리되는 것만)
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all{
		exclude group : 'org.springframework.boot', module : 'spring-boot-starter-logging'
		//exclude group : 'org.apache.logging.log4j', module : 'log4j-to-slf4j'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'javax.servlet:jstl:1.2'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'javax.servlet:javax.servlet-api'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
